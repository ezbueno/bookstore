package bookstore.entidade;
// Generated 14 de jun. de 2020 18:01:59 by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Livro generated by hbm2java
 */
@Entity
@Table(name = "livro", catalog = "bookstoredb", uniqueConstraints = @UniqueConstraint(columnNames = "titulo"))
public class Livro implements java.io.Serializable {

	private Integer livroId;
	private Categoria categoria;
	private String titulo;
	private String autor;
	private String descricao;
	private String isbn;
	private byte[] imagem;
	private float preco;
	private Date dataPublicacao;
	private Date ultimaAtualizacao;
	private Set<Detalhe> detalhes = new HashSet<Detalhe>(0);
	private Set<Avaliacao> avaliacaos = new HashSet<Avaliacao>(0);

	public Livro() {
	}

	public Livro(Categoria categoria, String titulo, String autor, String descricao, String isbn, byte[] imagem,
			float preco, Date dataPublicacao, Date ultimaAtualizacao) {
		this.categoria = categoria;
		this.titulo = titulo;
		this.autor = autor;
		this.descricao = descricao;
		this.isbn = isbn;
		this.imagem = imagem;
		this.preco = preco;
		this.dataPublicacao = dataPublicacao;
		this.ultimaAtualizacao = ultimaAtualizacao;
	}

	public Livro(Categoria categoria, String titulo, String autor, String descricao, String isbn, byte[] imagem,
			float preco, Date dataPublicacao, Date ultimaAtualizacao, Set<Detalhe> detalhes,
			Set<Avaliacao> avaliacaos) {
		this.categoria = categoria;
		this.titulo = titulo;
		this.autor = autor;
		this.descricao = descricao;
		this.isbn = isbn;
		this.imagem = imagem;
		this.preco = preco;
		this.dataPublicacao = dataPublicacao;
		this.ultimaAtualizacao = ultimaAtualizacao;
		this.detalhes = detalhes;
		this.avaliacaos = avaliacaos;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "livro_id", unique = true, nullable = false)
	public Integer getLivroId() {
		return this.livroId;
	}

	public void setLivroId(Integer livroId) {
		this.livroId = livroId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "categoria_id", nullable = false)
	public Categoria getCategoria() {
		return this.categoria;
	}

	public void setCategoria(Categoria categoria) {
		this.categoria = categoria;
	}

	@Column(name = "titulo", unique = true, nullable = false, length = 128)
	public String getTitulo() {
		return this.titulo;
	}

	public void setTitulo(String titulo) {
		this.titulo = titulo;
	}

	@Column(name = "autor", nullable = false, length = 64)
	public String getAutor() {
		return this.autor;
	}

	public void setAutor(String autor) {
		this.autor = autor;
	}

	@Column(name = "descricao", nullable = false, length = 16777215)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "isbn", nullable = false, length = 15)
	public String getIsbn() {
		return this.isbn;
	}

	public void setIsbn(String isbn) {
		this.isbn = isbn;
	}

	@Column(name = "imagem", nullable = false)
	public byte[] getImagem() {
		return this.imagem;
	}

	public void setImagem(byte[] imagem) {
		this.imagem = imagem;
	}

	@Column(name = "preco", nullable = false, precision = 12, scale = 0)
	public float getPreco() {
		return this.preco;
	}

	public void setPreco(float preco) {
		this.preco = preco;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_publicacao", nullable = false, length = 10)
	public Date getDataPublicacao() {
		return this.dataPublicacao;
	}

	public void setDataPublicacao(Date dataPublicacao) {
		this.dataPublicacao = dataPublicacao;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "ultima_atualizacao", nullable = false, length = 19)
	public Date getUltimaAtualizacao() {
		return this.ultimaAtualizacao;
	}

	public void setUltimaAtualizacao(Date ultimaAtualizacao) {
		this.ultimaAtualizacao = ultimaAtualizacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "livro")
	public Set<Detalhe> getDetalhes() {
		return this.detalhes;
	}

	public void setDetalhes(Set<Detalhe> detalhes) {
		this.detalhes = detalhes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "livro")
	public Set<Avaliacao> getAvaliacaos() {
		return this.avaliacaos;
	}

	public void setAvaliacaos(Set<Avaliacao> avaliacaos) {
		this.avaliacaos = avaliacaos;
	}

}
